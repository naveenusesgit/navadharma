from fpdf import FPDF
import os
import qrcode

class PDF(FPDF):
    def header(self):
        if os.path.exists("static/logo.png"):
            self.image("static/logo.png", 10, 8, 30)
        self.set_font("Helvetica", "B", 16)
        self.cell(0, 10, "Navadharma Prediction Report", ln=True, align="C")
        self.ln(10)

    def footer(self):
        self.set_y(-20)
        self.set_font("Helvetica", "I", 10)
        self.cell(0, 10, "— Nav, Principal Astrologer", ln=True, align="C")
        self.cell(0, 10, "Generated by Navadharma.com", align="C")

def generate_pdf(data: dict, filename="report.pdf"):
    pdf = PDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)

    def section_title(title):
        pdf.set_font("Helvetica", "B", 13)
        pdf.set_text_color(0)
        pdf.cell(0, 10, title, ln=True)
        pdf.set_font("Helvetica", "", 12)
        pdf.set_text_color(30, 30, 30)

    # 🌟 Basic Info
    section_title("Birth Details")
    pdf.cell(0, 10, f"Name: {data.get('name', '—')}", ln=True)
    pdf.cell(0, 10, f"Date: {data.get('date', '—')}", ln=True)
    pdf.cell(0, 10, f"Time: {data.get('time', '—')}", ln=True)
    pdf.cell(0, 10, f"Place: {data.get('place', '—')}", ln=True)
    pdf.ln(5)

    # 🗺️ Charts (optional)
    for chart_name, img in [("Birth Chart", "static/birth_chart.png"), ("KP Chart", "static/kp_chart.png")]:
        if os.path.exists(img):
            section_title(chart_name)
            pdf.image(img, w=100)
            pdf.ln(5)

    # 🔭 Lagna + Dasha
    section_title("Astrological Snapshot")
    dasha = data.get("currentDasha", {})
    pdf.cell(0, 10, f"Lagna: {data.get('lagna', '—')}", ln=True)
    pdf.cell(0, 10, f"Mahadasha: {dasha.get('mahadasha', '—')} | Antardasha: {dasha.get('antardasha', '—')}", ln=True)
    pdf.cell(0, 10, f"Dasha Period: {dasha.get('period', '—')}", ln=True)
    pdf.ln(5)

    # 🪐 Planet Table
    section_title("Planetary Positions")
    planets = data.get("planets", {})
    for planet, info in planets.items():
        pdf.cell(0, 10, f"{planet}: {info.get('sign', '')} ({info.get('degree', '')}°)", ln=True)
    pdf.ln(3)

    # 🌌 Yogas
    section_title("Significant Yogas")
    for yoga in data.get("yogas", []):
        pdf.multi_cell(0, 8, f"• {yoga}")
    pdf.ln(4)

    # 📘 GPT Summary
    if data.get("gptSummary"):
        section_title("AI-Powered Interpretation")
        pdf.set_font("Helvetica", "I", 12)
        pdf.multi_cell(0, 8, data["gptSummary"])
        pdf.ln(4)

    # 🔮 Predictions (if any)
    section_title("Predictions")
    predictions = data.get("predictions", {})
    for topic, content in predictions.items():
        pdf.set_font("Helvetica", "B", 12)
        pdf.cell(0, 8, topic.capitalize(), ln=True)
        pdf.set_font("Helvetica", "", 12)
        if isinstance(content, dict):
            for k, v in content.items():
                if k.lower() != "hidden":
                    pdf.multi_cell(0, 8, f"{k.capitalize()}: {v}")
        if content.get("hidden", False):
            pdf.set_text_color(150, 0, 0)
            pdf.cell(0, 8, "👉 Full reading available in Premium Navadharma Report", ln=True)
            pdf.set_text_color(0)
        pdf.ln(4)

    # 📎 QR Code
    qr_data = "https://navadharma.com"
    qr_img = qrcode.make(qr_data)
    qr_path = "static/nav_qr.png"
    qr_img.save(qr_path)
    pdf.image(qr_path, x=160, y=pdf.get_y(), w=30)
    pdf.ln(20)

    # ✅ Save
    output_path = f"static/{filename}"
    pdf.output(output_path, "F")
    return output_path
