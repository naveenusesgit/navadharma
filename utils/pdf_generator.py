from fpdf import FPDF
import os
import qrcode
from datetime import datetime

class PDF(FPDF):
    def header(self):
        if os.path.exists("static/logo.png"):
            self.image("static/logo.png", 10, 8, 30)
        self.set_font("Helvetica", "B", 16)
        self.cell(0, 10, "Navadharma Astrology Report", ln=True, align="C")
        self.ln(10)

    def footer(self):
        self.set_y(-20)
        self.set_font("Helvetica", "I", 10)
        self.cell(0, 10, "— Nav, Principal Astrologer", ln=True, align="C")
        self.cell(0, 10, "Generated by Navadharma.com", align="C")

def add_section_title(pdf, title):
    pdf.set_font("Helvetica", "B", 13)
    pdf.set_text_color(0)
    pdf.cell(0, 10, title, ln=True)
    pdf.set_font("Helvetica", "", 12)
    pdf.set_text_color(30, 30, 30)

def generate_pdf(data: dict, filename="report.pdf"):
    pdf = PDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.set_font("Helvetica", "", 12)

    # Birth Details
    add_section_title(pdf, "Birth Details")
    pdf.cell(0, 10, f"Date: {data.get('date', '—')}", ln=True)
    pdf.cell(0, 10, f"Time: {data.get('time', '—')}", ln=True)
    pdf.cell(0, 10, f"Place: {data.get('place', '—')}", ln=True)
    pdf.ln(5)

    # Charts
    if os.path.exists("static/birth_chart.png"):
        add_section_title(pdf, "Birth Chart")
        pdf.image("static/birth_chart.png", w=100)
        pdf.ln(5)

    if os.path.exists("static/kp_chart.png"):
        add_section_title(pdf, "KP Chart")
        pdf.image("static/kp_chart.png", w=100)
        pdf.ln(5)

    if "divisionalCharts" in data:
        for chart_name, path in data["divisionalCharts"].items():
            if os.path.exists(path):
                add_section_title(pdf, f"{chart_name.upper()} Chart")
                pdf.image(path, w=100)
                pdf.ln(5)

    # Lagna & Dasha
    add_section_title(pdf, "Current Snapshot")
    dasha = data.get("currentDasha", {})
    pdf.cell(0, 10, f"Lagna: {data.get('lagna', '—')}", ln=True)
    pdf.cell(0, 10, f"Mahadasha: {dasha.get('mahadasha', '—')}", ln=True)
    pdf.cell(0, 10, f"Antardasha: {dasha.get('antardasha', '—')}", ln=True)
    pdf.cell(0, 10, f"Period: {dasha.get('period', '—')}", ln=True)
    pdf.ln(5)

    # Transits
    if "transits" in data:
        add_section_title(pdf, "Current Planetary Transits")
        for planet, sign in data["transits"].items():
            pdf.cell(0, 8, f"{planet}: {sign}", ln=True)
        pdf.ln(5)

    # Numerology
    if "numerology" in data:
        add_section_title(pdf, "Numerology Highlights")
        for k, v in data["numerology"].items():
            pdf.cell(0, 8, f"{k.capitalize()}: {v}", ln=True)
        pdf.ln(5)

    # GPT Summary
    if "gptSummary" in data:
        add_section_title(pdf, "GPT Insights")
        pdf.set_font("Helvetica", "I", 12)
        pdf.multi_cell(0, 8, data["gptSummary"])
        pdf.set_font("Helvetica", "", 12)
        pdf.ln(5)

    # Predictions
    if "predictions" in data:
        add_section_title(pdf, "Predictions")
        for area, info in data["predictions"].items():
            pdf.set_font("Helvetica", "B", 12)
            pdf.cell(0, 8, area.capitalize(), ln=True)
            pdf.set_font("Helvetica", "", 12)
            if isinstance(info, dict):
                for k, v in info.items():
                    if k.lower() != "hidden":
                        pdf.multi_cell(0, 8, f"{k.capitalize()}: {v}")
            if info.get("hidden", False):
                pdf.set_text_color(150, 0, 0)
                pdf.cell(0, 8, "Full prediction in premium report.", ln=True)
                pdf.set_text_color(0)
            pdf.ln(4)

    # QR Code
    qr = qrcode.make("https://navadharma.com")
    qr_path = "static/nav_qr.png"
    qr.save(qr_path)
    pdf.image(qr_path, x=160, y=pdf.get_y(), w=30)
    pdf.ln(30)

    output_path = f"static/{filename}"
    pdf.output(output_path, "F")
    return output_path

def generate_match_pdf(report: dict, boy: dict, girl: dict, filename="match_report.pdf"):
    pdf = PDF()
    pdf.add_page()
    pdf.set_font("Helvetica", "", 12)

    add_section_title(pdf, "Boy Details")
    for k, v in boy.items():
        pdf.cell(0, 8, f"{k.capitalize()}: {v}", ln=True)

    pdf.ln(5)
    add_section_title(pdf, "Girl Details")
    for k, v in girl.items():
        pdf.cell(0, 8, f"{k.capitalize()}: {v}", ln=True)

    pdf.ln(5)
    add_section_title(pdf, "Compatibility Summary")
    for key, val in report["summary"].items():
        pdf.multi_cell(0, 8, f"{key}: {val}")
    pdf.ln(5)

    add_section_title(pdf, "GPT Insights")
    pdf.set_font("Helvetica", "I", 12)
    pdf.multi_cell(0, 8, report["gptSummary"])
    pdf.set_font("Helvetica", "", 12)

    qr = qrcode.make("https://navadharma.com")
    qr_path = "static/nav_qr_match.png"
    qr.save(qr_path)
    pdf.image(qr_path, x=160, y=pdf.get_y(), w=30)

    path = f"static/{filename}"
    pdf.output(path, "F")
    return path
