from fpdf import FPDF
import os
from datetime import datetime

class PDFReport(FPDF):
    def header(self):
        try:
            if os.path.exists("static/logo.png"):
                self.image("static/logo.png", 10, 8, 33)
                print("✅ Logo added to PDF header")
            else:
                print("⚠️ Logo not found at static/logo.png")
        except Exception as e:
            print("⚠️ Failed to add logo:", str(e))

        self.set_font("Arial", "B", 15)
        self.cell(0, 10, "Navadharma KP Astrology Report", ln=True, align="C")
        self.ln(10)

    def footer(self):
        self.set_y(-15)
        self.set_font("Arial", "I", 8)
        self.cell(0, 10, f"Generated by Navadharma · {datetime.now().strftime('%Y-%m-%d %H:%M')}", 0, 0, "C")

def generate_pdf(data: dict, filename="navadharma_report.pdf") -> str:
    pdf = PDFReport()
    pdf.add_page()
    pdf.set_font("Arial", size=12)

    pdf.cell(0, 10, "Birth Details:", ln=True)
    pdf.cell(0, 10, f"Date: {data.get('date')}", ln=True)
    pdf.cell(0, 10, f"Time: {data.get('time')}", ln=True)
    pdf.cell(0, 10, f"Place: {data.get('place')}", ln=True)
    pdf.ln(5)

    pdf.cell(0, 10, "Predictions:", ln=True)
    pdf.set_font("Arial", "B", 12)

    pred = data["predictions"]
    for section, details in pred.items():
        pdf.set_font("Arial", "B", 12)
        pdf.cell(0, 10, section.capitalize(), ln=True)
        pdf.set_font("Arial", size=11)
        for key, value in details.items():
            line = f" - {key.capitalize()}: {value}"
            pdf.cell(0, 10, line, ln=True)
        pdf.ln(3)

    out_path = f"static/{filename}"
    os.makedirs("static", exist_ok=True)
    pdf.output(out_path)
    print(f"✅ PDF saved at: {out_path}")
    return out_path
