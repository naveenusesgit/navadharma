from fpdf import FPDF
import os
from datetime import datetime
import qrcode

class PDF(FPDF):
    def header(self):
        if os.path.exists("static/logo.png"):
            self.image("static/logo.png", 10, 8, 30)
        self.set_font("Helvetica", "B", 16)
        self.set_text_color(0, 0, 80)
        self.cell(0, 10, "Navadharma Prediction Report", ln=True, align="C")
        self.ln(10)

    def footer(self):
        self.set_y(-20)
        self.set_font("Helvetica", "I", 10)
        self.set_text_color(100)
        self.cell(0, 10, "‚Äî Nav, Principal Astrologer", ln=True, align="C")
        self.cell(0, 10, "Generated by Navadharma.com", align="C")

def generate_pdf(data: dict, filename="report.pdf"):
    pdf = PDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)

    pdf.set_font("Helvetica", "", 12)
    pdf.set_fill_color(245, 245, 245)

    def section_title(title):
        pdf.set_font("Helvetica", "B", 13)
        pdf.set_text_color(0, 0, 0)
        pdf.cell(0, 10, f"üü£ {title}", ln=True)
        pdf.set_font("Helvetica", "", 12)
        pdf.set_text_color(50, 50, 50)

    # üßæ Birth Info
    section_title("Birth Details")
    pdf.cell(0, 10, f"Date: {data.get('date', '‚Äî')}", ln=True)
    pdf.cell(0, 10, f"Time: {data.get('time', '‚Äî')}", ln=True)
    pdf.cell(0, 10, f"Place: {data.get('place', '‚Äî')}", ln=True)
    pdf.ln(5)

    # üñºÔ∏è Charts
    for chart_name, file in [("Birth Chart", "birth_chart.png"), ("KP Chart", "kp_chart.png")]:
        path = os.path.join("static", file)
        if os.path.exists(path):
            section_title(chart_name)
            pdf.image(path, w=100)
            pdf.ln(5)

    # üåÄ Nakshatras
    nakshatras = data.get("nakshatras", {})
    if nakshatras:
        section_title("Nakshatras")
        for planet, nak in nakshatras.items():
            pdf.cell(0, 8, f"{planet}: {nak}", ln=True)
        pdf.ln(5)

    # üî± Yogas
    yogas = data.get("yogas", {})
    if yogas:
        section_title("Significant Yogas")
        for cat, ylist in yogas.items():
            pdf.set_font("Helvetica", "B", 12)
            pdf.cell(0, 8, f"{cat}", ln=True)
            pdf.set_font("Helvetica", "", 12)
            for yoga in ylist:
                pdf.multi_cell(0, 8, f"‚Ä¢ {yoga}")
            pdf.ln(3)

    # üîÆ Predictions
    section_title("Predictions")
    predictions = data.get("predictions", {})
    for topic, content in predictions.items():
        pdf.set_font("Helvetica", "B", 12)
        pdf.cell(0, 8, topic.capitalize(), ln=True)
        pdf.set_font("Helvetica", "", 12)

        if isinstance(content, dict):
            for k, v in content.items():
                if k.lower() != "hidden":
                    pdf.multi_cell(0, 8, f"{k.capitalize()}: {v}")
        if content.get("hidden", False):
            pdf.set_text_color(180, 0, 0)
            pdf.cell(0, 8, "üîí Full reading available in the Premium Navadharma Report", ln=True)
            pdf.set_text_color(0)
        pdf.ln(4)

    # üß† GPT Summary
    gpt_summary = data.get("gpt", "")
    if gpt_summary:
        section_title("AI Summary")
        pdf.multi_cell(0, 8, gpt_summary)
        pdf.ln(5)

    # üì± QR Code
    qr_data = "https://navadharma.com"
    qr = qrcode.make(qr_data)
    qr_path = "static/nav_qr.png"
    qr.save(qr_path)
    pdf.image(qr_path, x=160, y=pdf.get_y(), w=30)
    pdf.ln(30)

    # ‚úÖ Save File
    output_path = f"static/{filename}"
    pdf.output(output_path, "F")
    return output_path
