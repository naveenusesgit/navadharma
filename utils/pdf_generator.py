from fpdf import FPDF
import os
import qrcode

class PDF(FPDF):
    def header(self):
        if os.path.exists("static/logo.png"):
            self.image("static/logo.png", 10, 8, 30)
        self.set_font("Helvetica", "B", 16)
        self.cell(0, 10, "Navadharma Astrology Report", ln=True, align="C")
        self.ln(10)

    def footer(self):
        self.set_y(-20)
        self.set_font("Helvetica", "I", 10)
        self.cell(0, 10, "— Nav, Principal Astrologer", ln=True, align="C")
        self.cell(0, 10, "Generated by Navadharma.com", align="C")

def render_section(pdf, title, content):
    pdf.set_font("Helvetica", "B", 13)
    pdf.cell(0, 10, title, ln=True)
    pdf.set_font("Helvetica", "", 12)
    pdf.multi_cell(0, 8, content or "—")
    pdf.ln(5)

def render_remedies_section(pdf, remedies):
    render_section(pdf, "Remedies", remedies)

def render_match_section(pdf, result):
    pdf.set_font("Helvetica", "B", 14)
    pdf.cell(0, 10, "Match Compatibility Report", ln=True, align="C")
    pdf.ln(5)

    for idx, person in enumerate(["person1", "person2"]):
        pdf.set_font("Helvetica", "B", 12)
        pdf.cell(0, 10, f"Partner {idx+1}: {result[person].get('birthDetails', {}).get('name', '')}", ln=True)
        render_section(pdf, "Summary", result[person].get("summary"))
        render_remedies_section(pdf, result[person].get("remedies"))
        pdf.ln(4)

    pdf.set_font("Helvetica", "B", 12)
    pdf.cell(0, 10, f"Compatibility Score: {result.get('compatibility', {}).get('score', '-')}/36", ln=True)
    render_section(pdf, "Notes", result.get("compatibility", {}).get("notes", "-"))
    pdf.ln(5)

def generate_pdf(data: dict, filename="report.pdf", is_match=False):
    pdf = PDF()
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)

    if is_match:
        render_match_section(pdf, data)
    else:
        render_section(pdf, "Name", data.get("name"))
        render_section(pdf, "Birth Details", f"{data['date']} at {data['time']} in {data['place']}")
        render_section(pdf, "Summary", data.get("summary"))
        render_remedies_section(pdf, data.get("remedies"))
        render_section(pdf, "Numerology", data.get("numerology"))
        render_section(pdf, "Current Dasha", str(data.get("currentDasha", {})))
        render_section(pdf, "Nakshatras & Yogas", ", ".join(data.get("yogas", [])))
        render_section(pdf, "Transit Effects", str(data.get("transit", {})))

    # QR Code
    qr_data = "https://navadharma.com"
    qr_img = qrcode.make(qr_data)
    qr_path = "static/nav_qr.png"
    qr_img.save(qr_path)
    pdf.image(qr_path, x=160, y=pdf.get_y(), w=30)
    pdf.ln(30)

    output_path = f"static/{filename}"
    pdf.output(output_path, "F")
    return output_path
